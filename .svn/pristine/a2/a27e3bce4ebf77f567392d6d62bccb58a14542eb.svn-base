var canvas;			//змінна для збереження обєкта canvas
var ctx;			//для отримання контексту canvas
			

var WEIGTH = 50;	//ширина картинки
var HEIGHT = 50;	//висота картинки

var ln_i = 0; 		//довжина масиву mapObjects що приходить з серверу
var ln_j = 0; 		//довжина масиву mapObjects що приходить з серверу
var path;			//шлях до картинки на сервері
var x;				//координата Х картинки
var y;				//координата Н картинки
var degree;			//кут повороту картинки

var dx;
var dy;


// ініціалізація canvas
function init_canvas(){
	
canvas = document.getElementById("canvas"); //беремо обєкт canvas
canvas.width = 1000;
canvas.height = 750;
ctx = canvas.getContext("2d");				//беремо його контекст
getOffsetRect(canvas);

}


// малювання на canvas
function draw(path, x, y, degree){
	
var img1 = new Image();

img1.src = path;						//вказуєм шлях до картинки, яка лежить на сервері
img1.width = WEIGTH;
img1.height = HEIGHT;

img1.onload = function() {				//функція що виконується поки вантажиться картинка


	rotate(degree, img1, x, y);
	}
}

//функція для повороту картинки
function rotate(degree, img1, x, y){
	
	degree = degree*1;
	
	x = x * 1;							//перетворюємо змінну в число
	y = y * 1;
	
ctx.save();
ctx.translate(x+WEIGTH/2,y+HEIGHT/2);		

ctx.rotate(degree * Math.PI / 180);
ctx.drawImage(img1, -(WEIGTH/2), -(HEIGHT/2));
ctx.restore();

}


//розкладання отриманих даних mapObjects на змінні
function parseObject(object, len){

	init_canvas();								//запускаємо функцію малювання в canvas
	
	ln_i = object.mapObjects.length;		//визначаємо кількість обєктів, що повертає сервер
	ln_j = object.mapObjects[0].length;		//визначаємо кількість обєктів, що повертає сервер
	
	for(var i=0; i<ln_i; i++){
		for(var j=0; j<ln_j; j++){
			
			path = object.mapObjects[i][j].serverPath;
			x = object.mapObjects[i][j].x;
			y = object.mapObjects[i][j].y;
			degree = object.mapObjects[i][j].rotationAngle;	//кут повроту
			
			draw(path, x, y, degree);
		}
	}	
}

//функція для отримання посилань на картинки карти та координати їх розміщення
function get_MapObject(){						
	
	$.ajaxSetup({
		 contentType: "application/x-www-form-urlencoded"
		 });
	 
		   $.ajax({	    
		    url: "get_map",						//сервлет до якого надходить запит і з якого береться відповідь
		    data: {"message":"give_me_object"},	//json який надсилається сервлету
		    success: function(object) {			//обєкт що отримується від сервлета
		    		 
		    	parseObject(object);			//передаємо отриманні дані з сервера функції що їх озпарсить
		    }
		    
		   });
}
/* отримування координат на канвасі*/
	$(function() {
	$("#canvas").mousedown(function(e) {
	    if (e.which === 1) {
	    	//getOffsetRect(canvas);
	    	var x1;
	    	var y1;
	    	x1 = e.pageX-dx;
	    	y1 = e.pageY-dy;
	    	alert(x1+" "+y1);
	    	$.ajax({
				url: "coordinate-step",
				success: function() {
					
				}
			});
	    }
	    if (e.which === 3) {
	    	var x2;
	    	var y2;
	    	x2 = e.pageX-dx;
	    	y2 = e.pageY-dy;
	    	$.ajax({
				url: "coordinate-step",
				data: {"f_x":x, "f_y":y},
				success: function() {
					
				}
			});
	    	alert(x2+" "+y2);
	    }
	});
});

/*отримування координат розміщення канвасі на екрані*/
function getOffsetRect(elem) {

    var box = elem.getBoundingClientRect();

    var body = document.body;
    var docElem = document.documentElement;

    var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;
    var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;

    var clientTop = docElem.clientTop || body.clientTop || 0;
    var clientLeft = docElem.clientLeft || body.clientLeft || 0;

    var top  = box.top +  scrollTop - clientTop;
    var left = box.left + scrollLeft - clientLeft;
    
	dy = Math.round(top);
	dx = Math.round(left);
}
