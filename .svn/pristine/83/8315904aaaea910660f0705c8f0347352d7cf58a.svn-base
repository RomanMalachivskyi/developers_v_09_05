package com.epam.lab.developers.game.map.object.active;

import com.epam.lab.developers.game.map.unit.Unit;
import com.epam.lab.developers.game.map.unit.UnitBuff;
import com.epam.lab.developers.game.map.unit.UnitStatus;

public class CoffeeMashine extends ActiveObject {
	
	public static final double STANDART_CODE_MULTIPLIER_BONUS = 0.03;
	public static final double MAX_CODE_MULTIPLIER_BONUS = 1.3;
	public static final long TIME_OF_GIVIN_BONUS = 120000;
	public static final String BUFF = "Hot Coffee";
	

	public CoffeeMashine(int x, int y, int rotationAngle, String path) {
		super(x, y, rotationAngle, path);
		// TODO Auto-generated constructor stub
	}



	@Override
	public float use(Unit unit) {
		// TODO Auto-generated method stub
		
		if (unitChecking(unit))
			switch (unit.getTask().getTask()){
			
			case "use"		 :   this.use();
				break;
		
				}
		
		return processPercentage;
		
		
		
	}
	
	@Override
	public void use() {
		// TODO Auto-generated method stub
			
		UnitBuff buff= activeUnit.getUnitStatus().getBuff(BUFF);
		
		if(buff!=null){
			if (buff.getBonus(UnitStatus.CODE_MULTIPLIER) < MAX_CODE_MULTIPLIER_BONUS)
				buff.addBonus(UnitStatus.CODE_MULTIPLIER, buff.getBonus(UnitStatus.CODE_MULTIPLIER)+this.STANDART_CODE_MULTIPLIER_BONUS);
			
		} else			
			activeUnit.getUnitStatus().addBuff(BUFF, (new UnitBuff(TIME_OF_GIVIN_BONUS).addBonus(UnitStatus.CODE_MULTIPLIER, this.STANDART_CODE_MULTIPLIER_BONUS)));

		
		super.use();
		
		
	}



}
