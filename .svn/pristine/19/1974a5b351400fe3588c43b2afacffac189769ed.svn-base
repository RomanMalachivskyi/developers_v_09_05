package com.epam.lab.developers.game.map.object.active;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.epam.lab.developers.game.Active;
import com.epam.lab.developers.game.map.object.MapObject;
import com.epam.lab.developers.game.map.unit.JuniorDeveloper;
import com.epam.lab.developers.game.map.unit.MiddleDeveloper;
import com.epam.lab.developers.game.map.unit.SeniorDeveloper;
import com.epam.lab.developers.game.map.unit.Unit;
import com.epam.lab.developers.game.map.unit.UnitStatus;

public abstract class ActiveObject extends MapObject implements	Active {
	
	protected float useMultiplayer;
	protected Set<String> tmp;
	
	protected String state = "nonUsed";
	
	protected transient Map<Class<? extends Unit>,Set<String>> availableMethods=new HashMap<Class<? extends Unit>, Set<String>>();
	


	
	
	

	public ActiveObject(int x, int y, int rotationAngle, String path) {
		super(x, y, rotationAngle, path);
		// TODO Auto-generated constructor stub	
			tmp= new HashSet<String>();
			tmp.add("use"); tmp.add("repair");tmp.add("breakDown");
		availableMethods.put(JuniorDeveloper.class,tmp);
		availableMethods.put(MiddleDeveloper.class,tmp);			
		availableMethods.put(SeniorDeveloper.class,tmp);		
		
	}

	public void use(){
	
	}
	
	public Set<String> getAvailableMethods(Class unit) {
		return availableMethods.get(unit);
	}
	
	public void action(UnitStatus status) {
		
		switch (state){
		
		case "use"		 :   this.use();
			break;
			
		case "repair"		 :   this.repair();
			break;
			
		case "breakDown"		 :   this.breakDown();
			break;
		
		default : System.err.println("unknown method");
			}	
		
	}


	private void breakDown() {
		// TODO Auto-generated method stub
		
	}


	private void repair() {
		// TODO Auto-generated method stub
		
	}

}
